"use strict";(self.webpackChunkcables=self.webpackChunkcables||[]).push([[312],{4123:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>a});var i=s(4848),r=s(8453);const o={},c="OBS",t={id:"obs/index",title:"OBS",description:"This is going to assume you have OBS experience, if you don't please reach out and we will walkthrough it together!",source:"@site/docs/obs/index.md",sourceDirName:"obs",slug:"/obs/",permalink:"/cables/docs/obs/",draft:!1,unlisted:!1,editUrl:"https://github.com/ausspeedruns/cables/tree/main/packages/create-docusaurus/templates/shared/docs/obs/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Microphone Audio",permalink:"/cables/docs/nodecg/microphone-audio"},next:{title:"Video",permalink:"/cables/docs/video"}},l={},a=[{value:"Cropping",id:"cropping",level:2}];function d(e){const n={em:"em",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"obs",children:"OBS"}),"\n",(0,i.jsx)(n.p,{children:"This is going to assume you have OBS experience, if you don't please reach out and we will walkthrough it together!"}),"\n",(0,i.jsx)(n.p,{children:"Our main scenes are:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Gameplay scenes for each type of aspect ratio and number of players","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"These change based on the schedule to only include the ones we need for an event"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Intermission"}),"\n",(0,i.jsx)(n.li,{children:"A full screen camera view with ticker"}),"\n",(0,i.jsxs)(n.li,{children:["ASNN ",(0,i.jsx)(n.em,{children:"(ASM)"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"In each scene is the following:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Transition browser source ",(0,i.jsx)(n.em,{children:"(Locked)"})]}),"\n",(0,i.jsxs)(n.li,{children:["Layout browser source ",(0,i.jsx)(n.em,{children:"(Locked)"})]}),"\n",(0,i.jsxs)(n.li,{children:["Camera ",(0,i.jsx)(n.em,{children:"(Muted)"})]}),"\n",(0,i.jsxs)(n.li,{children:["Gameplay sources ",(0,i.jsx)(n.em,{children:"(Muted)"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"cropping",children:"Cropping"}),"\n",(0,i.jsx)(n.p,{children:"To correct the cropping of a gameplay source:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Right click the source"}),"\n",(0,i.jsx)(n.li,{children:"Select filters"}),"\n",(0,i.jsx)(n.li,{children:"Click crop"}),"\n",(0,i.jsx)(n.li,{children:"Type, click or scroll the values until it is as accurate as possible"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>t});var i=s(6540);const r={},o=i.createContext(r);function c(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);